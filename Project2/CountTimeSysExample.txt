int GameTime; →　制限時間定義

初期化処理中に
GameTime = 60 * 30; → 制限時間設定：30秒（秒間60フレーム×30の計算）

フレーム処理で
GameTime -= 1; → 制限時間をカウント

レンダリング処理で
Drawなんたらかんたら(...中略... "Time: %d", GameTime / 60); → フレームの値を秒に戻して表示

////条件判定////
if(GameTIme <= 0) → ゼロ秒になったら？

※もしかして：
GameTimeのフレームごと減少値を変化させることで、擬似的な倍速になるのでは？

※メモ：Y!知恵袋より
（要float化、倍速値の決定には？）
例えば、３〜１０の間での小数点第一位までの乱数を発生させたいのであれば、
まず、３０〜１００の間で乱数を発生させておき、
その後それを１０で割ってしまえば、３．０〜１０．０の乱数になりますね。


ランダムに時間と、倍化値を設定し
これらをセットして
「x.x倍で進む時間でx秒以内」のビタ押しが基本

ステージの流れ：
測る時間を決める！
（ランダムに秒数を決定し、それをフレーム換算した数をセットしておく）
↓
※低難易度ではスキップ※
何倍速！
（これも上記同様、ランダムに決定して、フレームごとの減少値としてセットしておく）
↓
準備はできた？（決定した時間、倍速値を表示して
スタート待機に入る。プレイヤーのボタン押下でスタート）
↓
計測中（タイマーを表示する。）
↓
計測完了！結果は？（目標時間との誤差によって
スコアを決定し、加算する）

これらを数ステージ繰り返し、ステージごと正確さによって
ポイントをつけて評価、という流れ！

低難易度では、倍速をしない。
高難易度では、時間表示を隠してみるのもありか？